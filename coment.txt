1. Создал первую страницу. Форму ввода для адреса сайта, с которого делаем парсинг.
------------------------------------------------------------------------------------------------------
2. Подправил название.
------------------------------------------------------------------------------------------------------
3. Создаем структуру папок для работы серверной части.

В папке Algorithms будут находится скрипты, которые производят вычисления и изменения.

В папке Developerscripts будут находится скрипты, которые будут нужны только во время разработки серверной части. И не будут использоваться в конечном проекте.

В папке Processingrequest будут находится скрипты, которые будут отвечать за взаимодействие с сервером.

------------------------------------------------------------------------------------------------------
4. Создал автозагрузку классов. Изменил структуру папок.

 Algorithms == algorithms,
 Developerscripts == developer_scripts,
 Processingrequest ==c ontroller.
------------------------------------------------------------------------------------------------------

5. Написал Parser. Parser. в случаи мелких ошибок в Url пытается их исправить.


6. Создал структуру папок для рисунков по цветам.
   Переделал авто загрузчик.
   Изменил структуру приложения.

7. Подключение phpUnit.

8. Запуск тестов vendor/bin/phpunit --configuration tests/phpunit.xml --testsuite unit

9. В этом комите начинаю переделку на иную структуру. Хотел сначала сделать, чтоб проходил парсер.
Выбирал все Url, Url. проверял, собирал в массив, и из предоставленного массива происходила загрузка файлов.
Потом обход по файлам с дальнейшей их трансформацией и тд. Но такой подход при большом количестве картинок на сайте не годится.
Так как парсер слишком долго обрабатывает все ссылки. и также в случаи какого то непредвиденного сбоя.
Все, что делал парсер окажется бесполезным.
Как должно быть. Парсер проходит, выбирает все Url. Потом идет по каждому Url и сразу же совершает все шаги.
преобразовывает размер, определяет доминирующий цвет и тд. В конце сохраняет картинку. И так цикл должен повторяться для каждой картинки.
Таким образом, картинки грузятся не спеша, по одной, и производится нужная трансформация. И не нужно ждать, пока все
Url. картинок будут загружены и проверены.


